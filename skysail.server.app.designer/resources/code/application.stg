application(application,routercode) ::= <<
package $application.packageName$;

import io.skysail.api.repos.*;
import io.skysail.server.app.*;
import io.skysail.server.domain.core.Repositories;
import io.skysail.server.menus.*;

import java.util.*;
import org.osgi.service.component.annotations.*;

import org.osgi.service.event.EventAdmin;

import de.twenty11.skysail.server.app.ApplicationProvider;
import de.twenty11.skysail.server.core.restlet.*;

@Component(immediate = true)
public class $application.applicationName$Application extends SkysailApplication implements ApplicationProvider, MenuItemProvider {

    public static final String LIST_ID = "lid";
    public static final String TODO_ID = "id";
    public static final String APP_NAME = "$application.applicationName$";

    @Reference(cardinality = ReferenceCardinality.OPTIONAL)
    private volatile EventAdmin eventAdmin;

    public $application.applicationName$Application() {
        super("$application.applicationName$", new ApiVersion(1), Arrays.asList($entityClasses(application.entityModels)$));
        addToAppContext(ApplicationContextId.IMG, "/static/img/silk/page_link.png");
    }
    
    @Reference(policy = ReferencePolicy.DYNAMIC, cardinality = ReferenceCardinality.MANDATORY)
    public void setRepositories(Repositories repos) {
        super.setRepositories(repos);
    }

    public void unsetRepositories(Repositories repo) {
        super.setRepositories(null);
    }

    $repositories(application.entityModels)$

    @Override
    protected void attach() {
        super.attach();
$routercode$
    }
    
    public EventAdmin getEventAdmin() {
        return eventAdmin;
    }

}
>>

entityClasses(modelSet) ::= <<
    $modelSet: {key | $key.id$.class};separator=", "$
>>

repositories(modelSet) ::= <<
$modelSet: {key | 
public $application.applicationName$Repository get$key.simpleName$Repository() {
    return ($application.applicationName$Repository) getRepository($key.id$.class);
\}    
}$


>>