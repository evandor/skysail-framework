postRelationToNewEntityResource(application, entity, relation) ::= <<
package $application.packageName$;

import java.util.List;

import io.skysail.server.queryfilter.Filter;
import io.skysail.server.queryfilter.pagination.Pagination;
import io.skysail.server.restlet.resources.PostRelationResource2;

public class Post$entity.simpleName$ToNew$relation.targetEntity.simpleName$RelationResource extends PostRelationResource2<$relation.targetEntity.simpleName$> {

    private FoldersApplication app;
    private $relation.targetEntity.simpleName$Repository repo;
    private String parentId;

    public Post$entity.simpleName$ToNew$relation.targetEntity.simpleName$RelationResource() {
        // addToContext(ResourceContextId.LINK_TITLE, "add");
    }

    @Override
    protected void doInit() {
        app = (FoldersApplication) getApplication();
        repo = (FolderRepository) app.getRepository(io.skysail.server.designer.demo.folders.Folder.class);
        parentId = getAttribute("id");
    }
    
    public $relation.targetEntity.simpleName$ createEntityTemplate() {
        return new $relation.targetEntity.simpleName$();
    }

    @Override
    public void addEntity($relation.targetEntity.simpleName$ entity) {
        $relation.targetEntity.simpleName$ parent = repo.findOne(parentId);
        parent.getFolders().add(entity);
        repo.save(parent, getApplication().getApplicationModel());
    }
 
    private void addIfNotPresentYet(io.skysail.server.designer.demo.folders.Folder theUser, Folder e) {
        if (!theUser.getFolders().stream().filter(oe -> oe.getId().equals(oe.getId())).findFirst().isPresent()) {
            theUser.getFolders().add(e);
        }
    }
}
>>