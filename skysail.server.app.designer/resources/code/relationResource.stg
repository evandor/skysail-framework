relationResource(application, entity, relation) ::= <<
package $application.packageName$;

import java.util.List;

import de.twenty11.skysail.server.core.restlet.ResourceContextId;
import io.skysail.api.links.Link;
import io.skysail.server.queryfilter.Filter;
import io.skysail.server.queryfilter.pagination.Pagination;
import io.skysail.server.restlet.resources.ListServerResource;

public class $entity.simpleName$s$relation.targetEntityModel.simpleName$sResource extends ListServerResource<$relation.targetEntityModel.className$> {

    private $application.name$Application app;
    private $relation.targetEntityModel.className$Repository oeRepo;

    public $entity.simpleName$s$relation.targetEntityModel.simpleName$sResource() {
        // super($entity.simpleName$s$relation.targetEntityModel.className$Resource.class);
        addToContext(ResourceContextId.LINK_TITLE, "list $relation.targetEntityModel.className$s for $entity.simpleName$");
    }

    @Override
    protected void doInit() {
        app = ($application.name$Application) getApplication();
        oeRepo = ($relation.targetEntityModel.className$Repository) app.getRepository($relation.targetEntityModel.className$.class);
    }

    @Override
    public List<$relation.targetEntityModel.className$> getEntity() {
        Filter filter = new Filter(getRequest());
        Pagination pagination = new Pagination(getRequest(), getResponse(), oeRepo.count(filter));
        return oeRepo.find(filter, pagination);// .stream().filter(predicate);
    }

    @Override
    public List<Link> getLinks() {
        return super.getLinks($entity.simpleName$s$relation.targetEntityModel.simpleName$sResource.class, Post$entity.simpleName$s$relation.targetEntityModel.simpleName$RelationResource.class);
    }
}
>>